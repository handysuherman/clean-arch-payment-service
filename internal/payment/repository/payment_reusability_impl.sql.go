// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: payment_reusability_impl.sql

package repository

import (
	"context"
)

const createPaymentReusability = `-- name: CreatePaymentReusability :one
INSERT INTO payment_reusability (
    prname
) VALUES (
    $1
) RETURNING prname
`

func (q *Queries) CreatePaymentReusability(ctx context.Context, prname string) (string, error) {
	row := q.db.QueryRow(ctx, createPaymentReusability, prname)
	err := row.Scan(&prname)
	return prname, err
}

const getPaymentReusabilityByName = `-- name: GetPaymentReusabilityByName :one
SELECT prname FROM payment_reusability WHERE prname = $1 LIMIT 1
`

func (q *Queries) GetPaymentReusabilityByName(ctx context.Context, prname string) (string, error) {
	row := q.db.QueryRow(ctx, getPaymentReusabilityByName, prname)
	err := row.Scan(&prname)
	return prname, err
}
